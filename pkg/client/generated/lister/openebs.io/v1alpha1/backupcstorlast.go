/*
Copyright 2019 The OpenEBS Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openebs/maya/pkg/apis/openebs.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BackupCStorLastLister helps list BackupCStorLasts.
type BackupCStorLastLister interface {
	// List lists all BackupCStorLasts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BackupCStorLast, err error)
	// BackupCStorLasts returns an object that can list and get BackupCStorLasts.
	BackupCStorLasts(namespace string) BackupCStorLastNamespaceLister
	BackupCStorLastListerExpansion
}

// backupCStorLastLister implements the BackupCStorLastLister interface.
type backupCStorLastLister struct {
	indexer cache.Indexer
}

// NewBackupCStorLastLister returns a new BackupCStorLastLister.
func NewBackupCStorLastLister(indexer cache.Indexer) BackupCStorLastLister {
	return &backupCStorLastLister{indexer: indexer}
}

// List lists all BackupCStorLasts in the indexer.
func (s *backupCStorLastLister) List(selector labels.Selector) (ret []*v1alpha1.BackupCStorLast, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BackupCStorLast))
	})
	return ret, err
}

// BackupCStorLasts returns an object that can list and get BackupCStorLasts.
func (s *backupCStorLastLister) BackupCStorLasts(namespace string) BackupCStorLastNamespaceLister {
	return backupCStorLastNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BackupCStorLastNamespaceLister helps list and get BackupCStorLasts.
type BackupCStorLastNamespaceLister interface {
	// List lists all BackupCStorLasts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BackupCStorLast, err error)
	// Get retrieves the BackupCStorLast from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BackupCStorLast, error)
	BackupCStorLastNamespaceListerExpansion
}

// backupCStorLastNamespaceLister implements the BackupCStorLastNamespaceLister
// interface.
type backupCStorLastNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BackupCStorLasts in the indexer for a given namespace.
func (s backupCStorLastNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BackupCStorLast, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BackupCStorLast))
	})
	return ret, err
}

// Get retrieves the BackupCStorLast from the indexer for a given namespace and name.
func (s backupCStorLastNamespaceLister) Get(name string) (*v1alpha1.BackupCStorLast, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("backupcstorlast"), name)
	}
	return obj.(*v1alpha1.BackupCStorLast), nil
}
