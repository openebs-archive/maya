---
apiVersion: openebs.io/v1alpha1
kind: CASTemplate
metadata:
  name: cstor-pool-create-default-0.7.0
spec:
  defaultConfig:
  # CstorPoolImage is the container image that executes zpool replication and 
  # communicates with cstor iscsi target
  - name: CstorPoolImage
    value: openebs/cstor-pool:ci
  # CstorPoolMgmtImage runs cstor pool and cstor volume replica related CRUD 
  # operations
  - name: CstorPoolMgmtImage
    value: openebs/cstor-pool-mgmt:ci
  # HostPathType is a hostPath volume i.e. mounts a file or directory from the 
  # host nodeâ€™s filesystem into a Pod. 'DirectoryOrCreate' value  ensures 
  # nothing exists at the given path i.e. an empty directory will be created.
  - name: HostPathType
    value: DirectoryOrCreate
  # RunNamespace is the namespace where namespaced resources related to pool 
  # will be placed
  - name: RunNamespace
    value: openebs
  taskNamespace: openebs
  run:
    tasks:
    # Following are the list of run tasks executed in this order to 
    # create a cstor storage pool
    - cstor-pool-create-listdisk-default-0.7.0
    - cstor-pool-create-listnode-default-0.7.0
    - cstor-pool-create-putcstorpoolcr-default-0.7.0
    - cstor-pool-create-putcstorpooldeployment-default-0.7.0
    - cstor-pool-create-putstoragepoolcr-default-0.7.0
    - cstor-pool-create-patchstoragepoolclaim-default-0.7.0
---
apiVersion: openebs.io/v1alpha1
kind: CASTemplate
metadata:
  name: cstor-pool-delete-default-0.7.0
spec:
  defaultConfig:
    # RunNamespace is the namespace to use to delete pool resources
  - name: RunNamespace
    value: openebs
  taskNamespace: openebs
  run:
    tasks:
    # Following are run tasks executed in this order to delete a storage pool
    - cstor-pool-delete-listcstorpoolcr-default-0.7.0
    - cstor-pool-delete-deletecstorpoolcr-default-0.7.0
    - cstor-pool-delete-listcstorpooldeployment-default-0.7.0
    - cstor-pool-delete-deletecstorpooldeployment-default-0.7.0
    - cstor-pool-delete-liststoragepoolcr-default-0.7.0
    - cstor-pool-delete-deletestoragepoolcr-default-0.7.0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-create-listdisk-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: getspcinfo
    apiVersion: openebs.io/v1alpha1
    kind: StoragePoolClaim
    objectName: {{.Storagepool.owner}}
    action: get
  post: |
    {{- jsonpath .JsonResult "{range .spec.disks.diskList[*]}{$},{end}" | trim | saveAs "getspcinfo.disk" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.spec.poolSpec.poolType}" | trim | saveAs "getspcinfo.poolType" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.spec.poolSpec.cacheFile}" | trim | saveAs "getspcinfo.cacheFile" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.spec.poolSpec.overProvisioning}" | trim | saveAs "getspcinfo.overProvisioning" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.spec.type}" | trim | saveAs "getspcinfo.type" .TaskResult | noop -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-create-listnode-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: cstorpoollistnode
    apiVersion: openebs.io/v1alpha1
    kind: Disk
    action: get
    repeatWith:
      metas:
      {{- $diskList := .TaskResult.getspcinfo.disk | replace "," " "| trim | split " "}}
      {{ range $k,$v := $diskList }}
      - objectName: {{$v}}
      {{ end }}
  post: |
    {{- $nodesList := jsonpath .JsonResult `pkey=nodes,{@.metadata.labels.kubernetes\.io/hostname}={@.spec.devlinks[0].links[1]};` | trim | default "" | splitList ";" -}}
    {{- $nodesList | keyMap "cstorNodePoolList" .ListItems | noop -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-create-putcstorpoolcr-default-0.7.0
  namespace: openebs
data:
  meta: |
    apiVersion: openebs.io/v1alpha1
    kind: CStorPool
    action: put
    id: createputcstorpool
    repeatWith:
      resources:
      {{- range $k, $v := .ListItems.cstorNodePoolList.nodes}}
      - {{ $k }}
      {{- end }}
  post: |
    {{- jsonpath .JsonResult `{.metadata.name}` | trim | addTo "createputcstorpool.objectName" .TaskResult | noop -}}
    {{- $nodeUidMap := jsonpath .JsonResult `pkey=nodesUid,{.metadata.labels.kubernetes\.io/hostname}={.metadata.uid} {.metadata.name};` | trim | default "" | splitList ";" -}}
    {{- $nodeUidMap | keyMap "cstorNodeUidList" .ListItems | noop -}}
  task: |
    apiVersion: openebs.io/v1alpha1
    kind: CStorPool
    metadata:
      name: {{.Storagepool.owner}}-{{randAlphaNum 4 |lower }}
      labels:
        openebs.io/storagepoolclaim: {{.Storagepool.owner}}
        kubernetes.io/hostname: {{ .ListItems.currentRepeatResource }}
    spec:
      disks:
        diskList: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodePoolList.nodes }}
      poolSpec:
        poolType: {{.TaskResult.getspcinfo.poolType}}
        cacheFile: /tmp/{{.Storagepool.owner}}.cache
        overProvisioning: false
    status:
      phase: {{ .Storagepool.phase }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-create-putcstorpooldeployment-default-0.7.0
  namespace: openebs
data:
  meta: |
    runNamespace: {{.Config.RunNamespace.value}}
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: put
    id: cstorpoolcreatedeploy
    repeatWith:
      resources:
      {{- range $k, $v := .ListItems.cstorNodeUidList.nodesUid }}
      - {{ $k }}
      {{- end }}
  post: |
    {{- jsonpath .JsonResult `{.metadata.name}` | trim | addTo "cstorpoolcreatedeploy.objectName" .TaskResult | noop -}}
    {{- $resourceNames := jsonpath .JsonResult `pkey=names,{.metadata.name}=;` | trim | default "" | splitList ";" -}}
    {{- $resourceNames | keyMap "resourceNameList" .ListItems | noop -}}
  task: |
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodeUidList.nodesUid |first | splitList " " | last}}
      labels:
        openebs.io/storagepoolclaim: {{.Storagepool.owner}}
        openebs.io/cstorPool: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodeUidList.nodesUid |first | splitList " " | last}}
        app: cstor-pool
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: cstor-pool
      template:
        metadata:
          labels:
            app: cstor-pool
        spec:
          serviceAccountName: openebs-maya-operator
          nodeSelector:
            kubernetes.io/hostname: {{ .ListItems.currentRepeatResource}}
          containers:
          - name: cstor-pool
            image: {{ .Config.CstorPoolImage.value }}
            ports:
            - containerPort: 12000
              protocol: TCP
            - containerPort: 3233
              protocol: TCP
            - containerPort: 3232
              protocol: TCP
            securityContext:
              privileged: true
            volumeMounts:
            - name: device
              mountPath: /dev
            - name: tmp
              mountPath: /tmp
            - name: udev
              mountPath: /run/udev
              # To avoid clash between terminating and restarting pod 
              # in case older zrepl gets deleted faster, we keep initial delay
            lifecycle:
              postStart:
                 exec:
                    command: ["/bin/sh", "-c", "sleep 2"]
          - name: cstor-pool-mgmt
            image: {{ .Config.CstorPoolMgmtImage.value }}
            ports:
            - containerPort: 9500
              protocol: TCP
            securityContext:
              privileged: true
            volumeMounts:
            - name: device
              mountPath: /dev
            - name: tmp
              mountPath: /tmp
            - name: udev
              mountPath: /run/udev
            env:
              # OPENEBS_IO_CSTOR_ID env has UID of cStorPool CR.
            - name: OPENEBS_IO_CSTOR_ID
              value: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodeUidList.nodesUid |first | splitList " " | first}}
          volumes:
          - name: device
            hostPath:
              # directory location on host
              path: /dev
              # this field is optional
              type: Directory
          - name: tmp
            hostPath:
              # From host, dir called /var/openebs/shared-<uid> is created to avoid clash if two replicas run on same node.
              path: /var/openebs/shared-a2b
              type: {{ .Config.HostPathType.value }}
          - name: udev
            hostPath:
              path: /run/udev
              type: Directory
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-create-putstoragepoolcr-default-0.7.0
  namespace: openebs
data:
  meta: |
    apiVersion: openebs.io/v1alpha1
    kind: StoragePool
    action: put
    id: createputstoragepool
    repeatWith:
      resources:
      {{- range $k, $v := .ListItems.cstorNodePoolList.nodes}}
      - {{ $k }}
      {{- end }}
  post: |
    {{- jsonpath .JsonResult `{.metadata.name}` | trim | addTo "createputstoragepool.objectName" .TaskResult | noop -}}
  task: |
    {{- $diskList := .TaskResult.getspcinfo.disk | replace "," " "| trim | split " " }}
    apiVersion: openebs.io/v1alpha1
    kind: StoragePool
    metadata:
      name: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodeUidList.nodesUid |first | splitList " " | last }}
      labels:
        openebs.io/storagepoolclaim: {{.Storagepool.owner}}
        openebs.io/cstorpool: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodeUidList.nodesUid |first | splitList " " | last}}
        kubernetes.io/hostname: {{ .ListItems.currentRepeatResource }}
    spec:
      disks:
        diskList: {{ pluck .ListItems.currentRepeatResource .ListItems.cstorNodePoolList.nodes }}
      poolSpec:
        poolType: {{.TaskResult.getspcinfo.poolType}}
        cacheFile: /tmp/{{.Storagepool.owner}}.cache
        overProvisioning: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-create-patchstoragepoolclaim-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: createpatchspc
    apiVersion: openebs.io/v1alpha1
    kind: StoragePoolClaim
    objectName: {{.Storagepool.owner}}
    action: patch
  task: |
    type: merge
    pspec: |-
      status:
        phase: Online
---
# This run task lists all cstor pool CRs that need to be deleted
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-delete-listcstorpoolcr-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: deletelistcsp
    apiVersion: openebs.io/v1alpha1
    kind: CStorPool
    action: list
    options: |-
      labelSelector: openebs.io/storagepoolclaim={{.Storagepool.owner}}
  post: |
    {{- $csps := jsonpath .JsonResult `{range .items[*]}pkey=csps,{@.metadata.name}=;{end}` | trim | default "" | splitList ";" -}}
    {{- $csps | notFoundErr "cstor pool cr not found" | saveIf "deletelistcsp.notFoundErr" .TaskResult | noop -}}
    {{- $csps | keyMap "csplist" .ListItems | noop -}}
---
# This run task delete all the required cstor pool CR
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-delete-deletecstorpoolcr-default-0.7.0
  namespace: openebs
data:
  meta: |
    apiVersion: openebs.io/v1alpha1
    kind: CStorPool
    action: delete
    id: deletecstorpoolcr
    objectName: {{ keys .ListItems.csplist.csps | join "," }}
---
# This run task lists all the required cstor pool deployments that need to be deleted
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-delete-listcstorpooldeployment-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: cstorpoollistdeploy
    apiVersion: extensions/v1beta1
    runNamespace: openebs
    kind: Deployment
    action: list
    options: |-
      labelSelector: openebs.io/storagepoolclaim={{.Storagepool.owner}}
  post: |
    {{- $csds := jsonpath .JsonResult `{range .items[*]}pkey=csds,{@.metadata.name}=;{end}` | trim | default "" | splitList ";" -}}
    {{- $csds | notFoundErr "cstor pool deployment not found" | saveIf "cstorpoollistdeploy.notFoundErr" .TaskResult | noop -}}
    {{- $csds | keyMap "csdlist" .ListItems | noop -}}
---
# This run task deletes all the required cstor pool deployments
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-delete-deletecstorpooldeployment-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: cstorpooldeletedeploy
    runNamespace: openebs
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: delete
    objectName: {{ keys .ListItems.csdlist.csds | join "," }}
---
# This run task lists all storage pool CRs that need to be deleted
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-delete-liststoragepoolcr-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: deletelistsp
    apiVersion: openebs.io/v1alpha1
    kind: StoragePool
    action: list
    options: |-
      labelSelector: openebs.io/storagepoolclaim={{.Storagepool.owner}}
  post: |
    {{- $sps := jsonpath .JsonResult `{range .items[*]}pkey=sps,{@.metadata.name}="";{end}` | trim | default "" | splitList ";" -}}
    {{- $sps | notFoundErr "storge pool cr not found" | saveIf "deletelistcsp.notFoundErr" .TaskResult | noop -}}
    {{- $sps | keyMap "splist" .ListItems | noop -}}
---
# This run task deletes the required storage pool claim object
apiVersion: v1
kind: ConfigMap
metadata:
  name: cstor-pool-delete-deletestoragepoolcr-default-0.7.0
  namespace: openebs
data:
  meta: |
    id: cstorpooldeletestoragepool
    apiVersion: openebs.io/v1alpha1
    kind: StoragePool
    action: delete
    objectName: {{ keys .ListItems.splist.sps | join "," }}
---
